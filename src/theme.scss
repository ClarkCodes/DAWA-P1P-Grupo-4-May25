@use '@angular/material' as mat;
@use 'sass:map';
@include mat.core();

// Color palettes, this part of the file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.

// Note: Color palettes are generated from primary: #323380, secondary: #16b8dd, tertiary: #075da1, neutral: #fcfcfc, neutral variant: #f0f0f0, error: #ba1a1a
$_palettes: (
  primary: (
    0: #000000,
    10: #0d0a5f,
    20: #252673,
    25: #31327f,
    30: #3c3e8b,
    35: #484a97,
    40: #5456a4,
    50: #6d6fbf,
    60: #8789db,
    70: #a2a3f8,
    80: #c1c1ff,
    90: #e1dfff,
    95: #f2efff,
    98: #fcf8ff,
    99: #fffbff,
    100: #ffffff,
  ),
  secondary: (
    0: #000000,
    10: #001f27,
    20: #003642,
    25: #004150,
    30: #004e5f,
    35: #005a6e,
    40: #00677e,
    50: #00829d,
    60: #009ebf,
    70: #1cbadf,
    80: #4dd6fc,
    90: #b4ebff,
    95: #dcf5ff,
    98: #f2fbff,
    99: #f9fdff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #001c38,
    20: #00325b,
    25: #003d6d,
    30: #004880,
    35: #005494,
    40: #1160a5,
    50: #377abf,
    60: #5594db,
    70: #72aef8,
    80: #a1c9ff,
    90: #d3e4ff,
    95: #eaf1ff,
    98: #f8f9ff,
    99: #fdfcff,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #1a1c1c,
    20: #2f3131,
    25: #3a3c3c,
    30: #454747,
    35: #515353,
    40: #5d5f5f,
    50: #767777,
    60: #909191,
    70: #aaabab,
    80: #c6c6c7,
    90: #e2e2e2,
    95: #f0f1f1,
    98: #f9f9f9,
    99: #fcfcfc,
    100: #ffffff,
    4: #0c0f0f,
    6: #121414,
    12: #1e2020,
    17: #282a2b,
    22: #333535,
    24: #38393a,
    87: #dadada,
    92: #e8e8e8,
    94: #eeeeee,
    96: #f3f3f3,
  ),
  neutral-variant: (
    0: #000000,
    10: #1a1c1c,
    20: #2f3131,
    25: #3a3c3c,
    30: #454747,
    35: #515353,
    40: #5d5f5f,
    50: #767777,
    60: #909191,
    70: #aaabab,
    80: #c6c6c7,
    90: #e2e2e2,
    95: #f1f1f1,
    98: #f9f9f9,
    99: #fcfcfc,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410002,
    20: #690004,
    25: #7e0007,
    30: #930009,
    35: #a8060f,
    40: #ba1a1a,
    50: #de372f,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab,
    90: #ffdad5,
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

@function _high-contrast-value($light, $dark, $theme-type) {
  @if ($theme-type == light) {
    @return $light;
  }
  @if ($theme-type == dark) {
    @return $dark;
  }
  @if ($theme-type == color-scheme) {
    @return light-dark(#{$light}, #{$dark});
  }

  @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
  @include mat.theme-overrides((
    primary: _high-contrast-value(#1b1a6a, #f1eeff, $theme-type),
    on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
    primary-container: _high-contrast-value(#323380, #bcbdff, $theme-type),
    on-primary-container: _high-contrast-value(#ffffff, #02003c, $theme-type),
    inverse-primary: _high-contrast-value(#c1c1ff, #3e3f8c, $theme-type),
    primary-fixed: _high-contrast-value(#3f408d, #e1dfff, $theme-type),
    primary-fixed-dim: _high-contrast-value(#282875, #c1c1ff, $theme-type),
    on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-primary-fixed-variant: _high-contrast-value(#ffffff, #04004d, $theme-type),
    secondary: _high-contrast-value(#00313d, #daf4ff, $theme-type),
    on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
    secondary-container: _high-contrast-value(#005062, #47d2f8, $theme-type),
    on-secondary-container: _high-contrast-value(#ffffff, #000d12, $theme-type),
    secondary-fixed: _high-contrast-value(#005062, #b4ebff, $theme-type),
    secondary-fixed-dim: _high-contrast-value(#003845, #4dd6fc, $theme-type),
    on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-secondary-fixed-variant: _high-contrast-value(#ffffff, #00141a, $theme-type),
    tertiary: _high-contrast-value(#00284b, #e9f0ff, $theme-type),
    on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
    tertiary-container: _high-contrast-value(#003e6f, #9ac5ff, $theme-type),
    on-tertiary-container: _high-contrast-value(#ffffff, #000c1c, $theme-type),
    tertiary-fixed: _high-contrast-value(#004b84, #d3e4ff, $theme-type),
    tertiary-fixed-dim: _high-contrast-value(#00345e, #a1c9ff, $theme-type),
    on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #001226, $theme-type),
    background: _high-contrast-value(#f9f9f9, #121414, $theme-type),
    on-background: _high-contrast-value(#1a1c1c, #e2e2e2, $theme-type),
    surface: _high-contrast-value(#f9f9f9, #121414, $theme-type),
    surface-dim: _high-contrast-value(#b8b9b9, #121414, $theme-type),
    surface-bright: _high-contrast-value(#f9f9f9, #4f5051, $theme-type),
    surface-container-low: _high-contrast-value(#f0f1f1, #1e2020, $theme-type),
    surface-container-lowest: _high-contrast-value(#ffffff, #000000, $theme-type),
    surface-container: _high-contrast-value(#e2e2e2, #2f3131, $theme-type),
    surface-container-high: _high-contrast-value(#d4d4d4, #3a3c3c, $theme-type),
    surface-container-highest: _high-contrast-value(#c6c6c7, #454747, $theme-type),
    on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
    shadow: _high-contrast-value(#000000, #000000, $theme-type),
    scrim: _high-contrast-value(#000000, #000000, $theme-type),
    surface-tint: _high-contrast-value(#5456a4, #c1c1ff, $theme-type),
    inverse-surface: _high-contrast-value(#2f3131, #e2e2e2, $theme-type),
    inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
    outline: _high-contrast-value(#2a2c2d, #f0f0f0, $theme-type),
    outline-variant: _high-contrast-value(#48494a, #c2c3c3, $theme-type),
    error: _high-contrast-value(#600004, #ffece9, $theme-type),
    on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
    error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
    on-error-container: _high-contrast-value(#ffffff, #220000, $theme-type),
    surface-variant: _high-contrast-value(#e2e2e2, #454747, $theme-type),
    on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
  ))
 }


/* Preparing the theme with the color palettes and important configurations */

$app-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: $primary-palette,
      tertiary: $tertiary-palette,
    ),
    typography:(
      brand-family: Poppins,
      plain-family: Roboto,
      bold-weight: 700,
      medium-weight: 500,
      regular-weight: 400,
    ),
    density: (
      scale: 0,
    ),
  )
);

:root {
  /* Applying the theme styling all the standalone components */
  @include mat.all-component-themes( $app-theme );

  @include mat.theme-overrides((
    shape: (
      small: 12px,
      medium: 16px,
      large: 24px,
    ),
  ));


 &  /* Color css variables to apply on elements that are not components such divs and alike to properly apply a correct theme color to maintain consistency */
  {--primary: #323380;
  --on-primary: #ffffff;
  --primary-container: #e1dfff;
  --on-primary-container: #0d0a5f;
  --inverse-primary: #c1c1ff;
  --primary-fixed: #e1dfff;
  --primary-fixed-dim: #c1c1ff;
  --on-primary-fixed: #0d0a5f;
  --on-primary-fixed-variant: #3c3e8b;
  --secondary: #00677e;
  --on-secondary: #ffffff;
  --secondary-container: #b4ebff;
  --on-secondary-container: #001f27;
  --secondary-fixed: #b4ebff;
  --secondary-fixed-dim: #4dd6fc;
  --on-secondary-fixed: #001f27;
  --on-secondary-fixed-variant: #004e5f;
  --tertiary: #1160a5;
  --on-tertiary: #ffffff;
  --tertiary-container: #d3e4ff;
  --on-tertiary-container: #001c38;
  --tertiary-fixed: #d3e4ff;
  --tertiary-fixed-dim: #a1c9ff;
  --on-tertiary-fixed: #001c38;
  --on-tertiary-fixed-variant: #004880;
  --background: #fcf8f8;
  --on-background: #1c1b1b;
  --surface: #fcf8f8;
  --surface-dim: #ddd9d9;
  --surface-bright: #fcf8f8;
  --surface-container-lowest: #ffffff;
  --surface-container-low: #f6f3f2;
  --surface-container: #f1edec;
  --surface-container-high: #ebe7e7;
  --surface-container-highest: #e5e2e1;
  --on-surface: #1c1b1b;
  --shadow: #000000;
  --scrim: #000000;
  --surface-tint: #5d5f5f;
  --inverse-surface: #313030;
  --inverse-on-surface: #f4f0ef;
  --outline: #747878;
  --outline-variant: #c4c7c8;
  --neutral: #797776;
  --neutral10: #1c1b1b;
  --error: #ba1a1a;
  --error-container: #ffdad6;
  --on-error: #ffffff;
  --on-error-container: #410002;
  --surface-variant: #e0e3e3;
  --on-surface-variant: #444748;
  --neutral-variant: #747879;
  --neutral-variant20: #2d3132;
  --inverse-secondary: #4dd6fc;
  --inverse-tertiary: #a1c9ff;}


  /* Styling the components that are not standalone, work with cdk and appear as a dissmisable modal and so on */
  @include mat.snack-bar-overrides((
    supporting-text-font: 'Poppins',
    supporting-text-size: 14pt,
    supporting-text-line-height: 24pt,
    container-shape: 15px,
  ));
}

.snackbar-success {
  @include mat.snack-bar-overrides((
    container-color: #00b85f,
    supporting-text-color: whitesmoke,
    button-color: gold,
  ));
}

.EventoDetailsDialogClass {
  @include mat.dialog-overrides((
    container-min-width: 55dvw,
  ));


}
